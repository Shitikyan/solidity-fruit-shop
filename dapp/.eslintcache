[{"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/index.tsx":"1","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/reportWebVitals.ts":"2","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/pages/home/index.tsx":"3","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/changeChain.ts":"4","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/notification.tsx":"5","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/loading/index.tsx":"6","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/row/index.tsx":"7","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/utils.ts":"8","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/contract.ts":"9","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/shop.ts":"10","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/chainList.ts":"11","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/headerRow/index.tsx":"12"},{"size":798,"mtime":1658686797014,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1658686797014,"results":"15","hashOfConfig":"14"},{"size":6976,"mtime":1658738005828,"results":"16","hashOfConfig":"14"},{"size":901,"mtime":1658728626988,"results":"17","hashOfConfig":"14"},{"size":608,"mtime":1658730289181,"results":"18","hashOfConfig":"14"},{"size":118,"mtime":1658686797014,"results":"19","hashOfConfig":"14"},{"size":832,"mtime":1658737348258,"results":"20","hashOfConfig":"14"},{"size":1065,"mtime":1658737955151,"results":"21","hashOfConfig":"14"},{"size":477,"mtime":1658737337435,"results":"22","hashOfConfig":"14"},{"size":1647,"mtime":1658736935028,"results":"23","hashOfConfig":"14"},{"size":646,"mtime":1658737116085,"results":"24","hashOfConfig":"14"},{"size":241,"mtime":1658737495931,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yl0lwo",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/index.tsx",[],["53","54"],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/reportWebVitals.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/pages/home/index.tsx",["55","56","57"],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/changeChain.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/notification.tsx",["58"],"const { NotificationManager } = require('react-notifications');\n\nexport enum MessageType {\n  INFO,\n  SUCCESS,\n  WARNING,\n  ERROR\n};\n\nexport function Notification(type: MessageType, massage: any) {\n  let not;\n  switch (type) {\n    case MessageType.INFO:\n      return NotificationManager.info('Info', 3000);\n    case MessageType.SUCCESS:\n      return NotificationManager.success(massage, 'Success', 3000);\n    case MessageType.WARNING:\n      return NotificationManager.warning(massage, 'Warning', 3000);\n    case MessageType.ERROR:\n      return NotificationManager.error(massage.message, 'Error', 3000);\n  };\n}","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/loading/index.tsx",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/row/index.tsx",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/utils/utils.ts",["59"],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/contract.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/shop.ts",[],"/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/blockchain/chainList.ts",["60","61","62"],"import { contracts } from './contract';\nimport { Notification, MessageType } from '../utils/notification';\nimport ABI from \"../abi/interfaseABI.json\";\nimport { ethers } from 'ethers';\n\nconst provider = new ethers.providers.JsonRpcProvider('https://rinkeby.infura.io/v3/f93e1c2c1b904979b8606e3703f1db9c')\nconst priceFeed = new ethers.Contract(process.env.REACT_APP_PROVIDE_ADDRESS || \"\", ABI, provider);\n\nexport const getUsfPriceForEth = async () => {\n    const roundData = await priceFeed.latestRoundData();\n    const decimals = await priceFeed.decimals();\n\n    return Number((roundData.answer.toString() / Math.pow(10, decimals)).toFixed(2));\n};","/home/gagik/Desktop/gitFolder/test/dapp-shop/dapp/src/components/headerRow/index.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":21,"nodeType":"69","messageId":"70","endLine":1,"endColumn":28},{"ruleId":"67","severity":1,"message":"71","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":16},{"ruleId":"67","severity":1,"message":"72","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":11},{"ruleId":"67","severity":1,"message":"73","line":11,"column":7,"nodeType":"69","messageId":"70","endLine":11,"endColumn":10},{"ruleId":"67","severity":1,"message":"74","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":21},{"ruleId":"67","severity":1,"message":"75","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":19},{"ruleId":"67","severity":1,"message":"76","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":22},{"ruleId":"67","severity":1,"message":"77","line":2,"column":24,"nodeType":"69","messageId":"70","endLine":2,"endColumn":35},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'ethers' is defined but never used.","'ABI' is defined but never used.","'not' is defined but never used.","'arrayBuffer' is defined but never used.","'contracts' is defined but never used.","'Notification' is defined but never used.","'MessageType' is defined but never used.","no-global-assign","no-unsafe-negation"]